// <auto-generated />
using System;
using EntityFrameworkS1.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFrameworkS1.Migrations
{
    [DbContext(typeof(EnterpriseDBContext))]
    [Migration("20250217114945_AddingRelations")]
    partial class AddingRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityFrameworkS1.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CourseInstructorCourseID")
                        .HasColumnType("int");

                    b.Property<int?>("CourseInstructorInstructorID")
                        .HasColumnType("int");

                    b.Property<string>("Descripition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Top_IDId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Top_IDId");

                    b.HasIndex("CourseInstructorInstructorID", "CourseInstructorCourseID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("EntityFrameworkS1.Entities.CourseInstructor", b =>
                {
                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("Evaluate")
                        .HasColumnType("int");

                    b.HasKey("InstructorID", "CourseID");

                    b.HasIndex("CourseID")
                        .IsUnique();

                    b.ToTable("InstructorsCourses");
                });

            modelBuilder.Entity("EntityFrameworkS1.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ins_IDId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Ins_IDId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("EntityFrameworkS1.Entities.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Bonus")
                        .HasColumnType("int");

                    b.Property<int?>("Dep_IdId")
                        .HasColumnType("int");

                    b.Property<int>("HourRate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Dep_IdId");

                    b.ToTable("Instrctors");
                });

            modelBuilder.Entity("EntityFrameworkS1.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EntityFrameworkS1.Entities.StudentCourse", b =>
                {
                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<float>("Grade")
                        .HasColumnType("real");

                    b.Property<int?>("StudentCourseCourseID")
                        .HasColumnType("int");

                    b.Property<int?>("StudentCourseStudentID")
                        .HasColumnType("int");

                    b.HasKey("StudentID", "CourseID");

                    b.HasIndex("CourseID");

                    b.HasIndex("StudentCourseStudentID", "StudentCourseCourseID");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("EntityFrameworkS1.Entities.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("EntityFrameworkS1.Entities.Course", b =>
                {
                    b.HasOne("EntityFrameworkS1.Entities.Topic", "Top_ID")
                        .WithMany("Courses")
                        .HasForeignKey("Top_IDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkS1.Entities.CourseInstructor", null)
                        .WithMany("Courses")
                        .HasForeignKey("CourseInstructorInstructorID", "CourseInstructorCourseID");

                    b.Navigation("Top_ID");
                });

            modelBuilder.Entity("EntityFrameworkS1.Entities.CourseInstructor", b =>
                {
                    b.HasOne("EntityFrameworkS1.Entities.Course", "Course")
                        .WithOne("CourseInstructor")
                        .HasForeignKey("EntityFrameworkS1.Entities.CourseInstructor", "CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkS1.Entities.Instructor", "Instructor")
                        .WithMany("CourseInstructors")
                        .HasForeignKey("InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("EntityFrameworkS1.Entities.Department", b =>
                {
                    b.HasOne("EntityFrameworkS1.Entities.Instructor", "Ins_ID")
                        .WithMany()
                        .HasForeignKey("Ins_IDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ins_ID");
                });

            modelBuilder.Entity("EntityFrameworkS1.Entities.Instructor", b =>
                {
                    b.HasOne("EntityFrameworkS1.Entities.Department", "Dep_Id")
                        .WithMany("Instructors")
                        .HasForeignKey("Dep_IdId");

                    b.Navigation("Dep_Id");
                });

            modelBuilder.Entity("EntityFrameworkS1.Entities.Student", b =>
                {
                    b.HasOne("EntityFrameworkS1.Entities.Department", "Dep_Id")
                        .WithMany("StudentID")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dep_Id");
                });

            modelBuilder.Entity("EntityFrameworkS1.Entities.StudentCourse", b =>
                {
                    b.HasOne("EntityFrameworkS1.Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkS1.Entities.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkS1.Entities.StudentCourse", null)
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentCourseStudentID", "StudentCourseCourseID");

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EntityFrameworkS1.Entities.Course", b =>
                {
                    b.Navigation("CourseInstructor")
                        .IsRequired();
                });

            modelBuilder.Entity("EntityFrameworkS1.Entities.CourseInstructor", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("EntityFrameworkS1.Entities.Department", b =>
                {
                    b.Navigation("Instructors");

                    b.Navigation("StudentID");
                });

            modelBuilder.Entity("EntityFrameworkS1.Entities.Instructor", b =>
                {
                    b.Navigation("CourseInstructors");
                });

            modelBuilder.Entity("EntityFrameworkS1.Entities.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("EntityFrameworkS1.Entities.StudentCourse", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("EntityFrameworkS1.Entities.Topic", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
